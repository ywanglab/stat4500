# Class Project 

**Goal**

to use various ML algorithms to predict a meaningful target $Y$ by *classification algorithms* or *regression algorithms*. Present it at COS Research Sympsium in the end of April. 
 
 **Data set**: real-world stock price and volume data. We could start with just one stock, e.g. APAL, S&P 500,  index, DJ index. 
 
 **Some ideas**: 
 
  * Create one model for each stock. 
  * create a single model for all stocks. Needs to embed each stock in a feature space. Research? 

**Start-up code**: refer to the page <https://github.com/ywanglab/Predicting_stock_movement/blob/main/Time_series_stock_data_analysis_ver2.ipynb>. 
 Perform some EDA to feel the data. 

 reference ticker symbols: <https://gist.github.com/quantra-go-algo/ac5180bf164a7894f70969fa563627b2>
 
 **Questions**: Which are the $X$ variables? price, volume, return, day of week, month of year, etc. 
 What is the $Y$ variable? next-day price, next-day return, next-five-day average price, next-five-day-average return, etc. 

 **Models**

 - Linear regression: 

    * including continuous variables (price, volume), categorical variables (day-of-week, month-of-year)
    * transforming $X$ (for including non-linear relation between $Y$ and $X$) or $Y$ (when $Y$ is heteroschedatic, i.e., with varied $\epsilon_i$)
    * plot residual plot to see if $Var(\epsilon_i)$ is changing. If yes, may appeal to transforming $Y$, e.g., $\log Y$, $\sqrt{Y}$. 
    * investigate outliers (points with unusual $Y$-values) using the *residual plot* or looking at *studentized residual*. 
    * investigate high leverage points (with unusual $x$ values), by calculating *leverage statistics*. 
    * Investigate if there is *colinearity* among the variables by calculating *VIF*. 

- classification: predicting directions of the stock price movement.  binary (with two direction), or multinomial (more than two values: e.g., up, same, down), LDA, QDA
- regularization of the parameters: lasso ($L^1$), ridge ($L^2$)
- selection of variables: forward, backward, mixture, regularization, cross-validation 
- decision tree: random forest, boosting 
- SVM: support vector machines
- NN